# Generated by Django 3.2.12 on 2022-02-07 00:54

from django.db import migrations, models
import django.db.models.deletion
import mailserveradmin.models.common
import mailserveradmin.models.domain
import mailserveradmin.models.user


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('mailserveradmin', '0002_alias_default_domain'),
    ]

    operations = [
        migrations.DeleteModel(
            name='MigrationVersion',
        ),
        migrations.AlterModelOptions(
            name='mailalias',
            options={'ordering': ['name', 'domain__name']},
        ),
        migrations.AlterModelOptions(
            name='maildomain',
            options={'ordering': ['name']},
        ),
        migrations.AlterModelOptions(
            name='mailuser',
            options={'ordering': ['name', 'domain__name']},
        ),
        migrations.AlterModelManagers(
            name='mailuser',
            managers=[
                ('objects', mailserveradmin.models.user.MailUserManager()),
            ],
        ),
        migrations.AddField(
            model_name='maildomain',
            name='dkim_enabled',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='maildomain',
            name='dkim_private_key',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='maildomain',
            name='dkim_selector',
            field=models.CharField(blank=True, max_length=50, null=True, validators=[mailserveradmin.models.domain.dkim_validator]),
        ),
        migrations.AddField(
            model_name='mailuser',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='mailuser',
            name='is_active',
            field=models.BooleanField(db_column='enabled', default=True),
        ),
        migrations.AddField(
            model_name='mailuser',
            name='is_admin',
            field=models.BooleanField(db_column='admin', default=False, help_text='admin for its domain'),
        ),
        migrations.AddField(
            model_name='mailuser',
            name='is_superuser',
            field=models.BooleanField(db_column='superadmin', default=False, help_text='admin for all domains'),
        ),
        migrations.AddField(
            model_name='mailuser',
            name='last_login',
            field=models.DateTimeField(blank=True, null=True, verbose_name='last login'),
        ),
        migrations.AddField(
            model_name='mailuser',
            name='quota',
            field=models.PositiveIntegerField(default=0, help_text='0 means no quota, size is in MB'),
        ),
        migrations.AddField(
            model_name='mailuser',
            name='send_only',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='mailuser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.AlterField(
            model_name='mailalias',
            name='destination',
            field=models.EmailField(max_length=254),
        ),
        migrations.AlterField(
            model_name='mailalias',
            name='domain',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='aliases', to='mailserveradmin.maildomain'),
        ),
        migrations.AlterField(
            model_name='mailalias',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='mailalias',
            name='name',
            field=models.CharField(max_length=255, validators=[mailserveradmin.models.common.username_validator]),
        ),
        migrations.AlterField(
            model_name='maildomain',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='maildomain',
            name='name',
            field=models.CharField(max_length=255, unique=True),
        ),
        migrations.AlterField(
            model_name='mailuser',
            name='domain',
            field=models.ForeignKey(blank=True, help_text='Could be null for the superadmin', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='users', to='mailserveradmin.maildomain'),
        ),
        migrations.AlterField(
            model_name='mailuser',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='mailuser',
            name='name',
            field=models.CharField(max_length=255, validators=[mailserveradmin.models.common.username_validator]),
        ),
        migrations.AlterField(
            model_name='mailuser',
            name='password',
            field=models.CharField(help_text='encrypted password', max_length=255),
        ),
        migrations.AlterUniqueTogether(
            name='mailalias',
            unique_together=set(),
        ),
        migrations.AlterUniqueTogether(
            name='mailuser',
            unique_together=set(),
        ),
        migrations.AddConstraint(
            model_name='mailalias',
            constraint=models.UniqueConstraint(fields=('name', 'domain', 'destination'), name='alias_idx'),
        ),
        migrations.AddConstraint(
            model_name='mailuser',
            constraint=models.UniqueConstraint(fields=('name', 'domain'), name='user_idx'),
        ),
        migrations.AlterModelTable(
            name='mailalias',
            table='mail_alias',
        ),
        migrations.AlterModelTable(
            name='maildomain',
            table='mail_domain',
        ),
        migrations.AlterModelTable(
            name='mailuser',
            table='mail_user',
        ),
    ]
